<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpHeaders"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="org.springframework.http.MediaType"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpEntity"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulServer"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.context.ApplicationContextAware"/>
    <fullyQualifiedTypeName name="org.springframework.context.ApplicationContext"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping"/>
    <fullyQualifiedTypeName name="org.springframework.beans.BeansException"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
    <fullyQualifiedTypeName name="com.example.springredis.dao.IEmployeeDao"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="org.springframework.jdbc.support.KeyHolder"/>
    <fullyQualifiedTypeName name="org.springframework.jdbc.core.namedparam.SqlParameterSource"/>
    <fullyQualifiedTypeName name="org.springframework.jdbc.support.GeneratedKeyHolder"/>
    <fullyQualifiedTypeName name="org.springframework.jdbc.core.namedparam.MapSqlParameterSource"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="javax.persistence.Id"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="org.springframework.jdbc.core.PreparedStatementCallback"/>
    <fullyQualifiedTypeName name="java.sql.SQLException"/>
    <fullyQualifiedTypeName name="java.sql.PreparedStatement"/>
    <fullyQualifiedTypeName name="org.springframework.dao.DataAccessException"/>
    <fullyQualifiedTypeName name="lombok.ToString"/>
    <fullyQualifiedTypeName name="com.example.springredis.service.EmployeeService"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="com.example.springredis.pojo.EmployeeRowMapper"/>
    <fullyQualifiedTypeName name="javax.persistence.Table"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.AutoConfigureAfter"/>
    <fullyQualifiedTypeName name="org.springframework.cache.annotation.EnableCaching"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.cache.CacheManager"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="java.io.Serializable"/>
    <fullyQualifiedTypeName name="org.springframework.data.redis.serializer.StringRedisSerializer"/>
    <fullyQualifiedTypeName name="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>
    <fullyQualifiedTypeName name="org.springframework.data.redis.cache.RedisCacheConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.data.redis.serializer.RedisSerializationContext"/>
    <fullyQualifiedTypeName name="org.springframework.data.redis.cache.RedisCacheManager"/>
    <fullyQualifiedTypeName name="org.springframework.cache.annotation.CacheConfig"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.example.springredis.dao.EmployeeDaoImpl"/>
    <fullyQualifiedTypeName name="org.springframework.cache.annotation.Cacheable"/>
    <fullyQualifiedTypeName name="org.springframework.cache.annotation.CacheEvict"/>
    <fullyQualifiedTypeName name="com.example.springredis.model.Employee"/>
</qualifiedTypeNameHistroy>
